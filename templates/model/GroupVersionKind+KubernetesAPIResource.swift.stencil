//
// Copyright 2020 Swiftkube Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

///
/// Generated by Swiftkube:ModelGen
/// Kubernetes {{meta.modelVersion}}
///

import Foundation

public extension GroupVersionKind {

	/// Creates a new instance of `GroupVersionKind` for the given `KubernetesAPIResource`.
	///
	/// - Parameter resource: An instance of a `KubernetesAPIResource`
	init?<R: KubernetesAPIResource>(of resource: R) {
		if let gvk = GroupVersionKind.init(rawValue: "\(resource.apiVersion)/\(resource.kind)") {
			self = gvk
		} else {
			return nil
		}
	}

	/// Creates a new instance of `GroupVersionKind` for the given `KubernetesAPIResource` type.
	///
	/// - Parameter type: A type of a `KubernetesAPIResource`, e.g. `core.v1.Pod.self`.
	init?<R: KubernetesAPIResource>(of type: R.Type) {
		switch type {
{% for gvk in allGVK %}
		case is {{ gvk|GVK.type }}.Type:
			self = .{{ gvk|GVK.case }}{% endfor %}
		default:
			return nil
		}
	}
}
