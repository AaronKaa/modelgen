//
// Copyright 2020 Iskandar Abudiab (iabudiab.dev)
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

///
/// Generated by Swiftkube:ModelGen
/// Kubernetes {{meta.modelVersion}}
///

import Foundation

///
/// GroupVersionKind unambiguously identifies a kind.
///
public enum GroupVersionKind: String, CaseIterable {
{% for gvk in allGVK %}
	case {{ gvk|GVK.case }} = "{{ gvk|GVK.full }}"{% endfor %}

	/// The group of this GroupVersionKind
	public var group: String {
		switch self {
{% for gvk in allGVK %}
		case .{{ gvk|GVK.case }}:
			return "{{ gvk|GVK.group }}"{% endfor %}
		}
	}

	/// The version of this GroupVersionKind
	public var version: String {
		switch self {
{% for gvk in allGVK %}
		case .{{ gvk|GVK.case }}:
			return "{{ gvk|GVK.version }}"{% endfor %}
		}
	}

	/// The kind of this GroupVersionKind
	public var kind: String {
		switch self {
{% for gvk in allGVK %}
		case .{{ gvk|GVK.case }}:
			return "{{ gvk.kind }}"{% endfor %}
		}
	}

	/// The API Version of this GroupVersionKind.
	public var apiVersion: String {
		if group == "core" {
			return version
		} else {
			return "\(group)/\(version)"
		}
	}

	/// The kind of this GroupVersionKind
	public var pluralName: String {
		switch self {
{% for gvk in allGVK %}
		case .{{ gvk|GVK.case }}:
			return "{{ gvk|GVK.plural }}"{% endfor %}
		}
	}

	/// The kind of this GroupVersionKind
	public var shortName: String? {
		switch self {
{% for gvk in allGVK %}
		case .{{ gvk|GVK.case }}:
			return {{ gvk|GVK.short }}{% endfor %}
		}
	}

	/// Whether the resource is namespaced or not
	public var namespaced: Bool {
		switch self {
{% for gvk in allGVK %}
		case .{{ gvk|GVK.case }}:
			return {{ gvk|GVK.nsScope }}{% endfor %}
		}
	}
}
