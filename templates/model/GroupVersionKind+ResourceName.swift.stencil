//
// Copyright 2020 Swiftkube Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

///
/// Generated by Swiftkube:ModelGen
/// Kubernetes {{meta.modelVersion}}
///

import Foundation

extension GroupVersionKind {

	/// Creates a new instance of `GroupVersionKind` for the provided resource name.
	///
	/// A resource name can be:
	/// - Lower-cased singular resource kind
	/// - Lower-cased plural resource name
	/// - Lower-cased short resource name
	///
	/// ```swift
	/// let gvk = GroupVersionKind(for: "deployment")
	/// let gvk = GroupVersionKind(for: "deployments")
	/// let gvk = GroupVersionKind(for: "deploy")
	/// ```
	///
	/// - Parameter resourceName: The resource plural or singular name or its kind.
	public init?(for resourceName: String) {
		if let gvk = GroupVersionKind.tryKind(resourceName) {
			self = gvk
		} else if let gvk = GroupVersionKind.tryPlural(resourceName) {
			self = gvk
		} else if let gvk = GroupVersionKind.tryShort(resourceName) {
			self = gvk
		} else {
			return nil
		}
	}

	private static func tryKind(_ kind: String) -> GroupVersionKind? {
		switch kind.lowercased() {
{% for gvk in newestGroupVersionKinds %}
		case "{{ gvk|GVK.kind|lowercase }}":
			return GroupVersionKind.{{ gvk|GVK.case }}{% endfor %}
		default:
			return nil
		}
	}

	private static func tryPlural(_ plural: String) -> GroupVersionKind? {
		switch plural {
{% for gvk in pluralGroupVersionKinds %}
		case "{{ gvk|GVK.plural }}":
			return GroupVersionKind.{{ gvk|GVK.case }}{% endfor %}
		default:
			return nil
		}
	}

	private static func tryShort(_ short: String) -> GroupVersionKind? {
		switch short {
{% for gvk in shortGroupVersionKinds %}
		case {{ gvk|GVK.short }}:
			return GroupVersionKind.{{ gvk|GVK.case }}{% endfor %}
		default:
			return nil
		}
	}
}
